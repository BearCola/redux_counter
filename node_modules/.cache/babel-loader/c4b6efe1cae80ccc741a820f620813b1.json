{"ast":null,"code":"import Counter from \"../components/Counter\";\nimport * as actions from \"../actions\";\nimport { connect } from \"react-redux\";\nexport function getRandomColor() {\n  const colors = [\"#495057\", \"#f03e3e\", \"#d6336c\", \"#ae3ec9\", \"#7048e8\", \"#4263eb\", \"#1c7cd6\", \"#1098ad\", \"#0ca678\", \"#37b24d\", \"#74b816\", \"#f59f00\", \"#f76707\"];\n  const random = Math.floor(Math.random() * 13);\n  return colors[random];\n}\n\nconst mapStateToProps = state => ({\n  color: state.colorData.color,\n  number: state.numberData.number\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onIncrement: () => dispatch(actions.increment()),\n  onDecrement: () => dispatch(actions.decrement()),\n  onSetColor: () => {\n    const color = getRandomColor();\n    dispatch(actions.setColor(color));\n  }\n});\n\nconst CounterContainer = connect(mapStateToProps, mapDispatchToProps)(Counter);\nexport default CounterContainer;","map":{"version":3,"sources":["/Users/user/redux-counter/src/containers/CounterContainer.js"],"names":["Counter","actions","connect","getRandomColor","colors","random","Math","floor","mapStateToProps","state","color","colorData","number","numberData","mapDispatchToProps","dispatch","onIncrement","increment","onDecrement","decrement","onSetColor","setColor","CounterContainer"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,uBAApB;AACA,OAAO,KAAKC,OAAZ,MAAyB,YAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAO,SAASC,cAAT,GAA0B;AAC7B,QAAMC,MAAM,GAAG,CACX,SADW,EAEX,SAFW,EAGX,SAHW,EAIX,SAJW,EAKX,SALW,EAMX,SANW,EAOX,SAPW,EAQX,SARW,EASX,SATW,EAUX,SAVW,EAWX,SAXW,EAYX,SAZW,EAaX,SAbW,CAAf;AAgBA,QAAMC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACD,MAAL,KAAgB,EAA3B,CAAf;AAEA,SAAOD,MAAM,CAACC,MAAD,CAAb;AACH;;AAED,MAAMG,eAAe,GAAIC,KAAD,KAAY;AAChCC,EAAAA,KAAK,EAAED,KAAK,CAACE,SAAN,CAAgBD,KADS;AAEhCE,EAAAA,MAAM,EAAEH,KAAK,CAACI,UAAN,CAAiBD;AAFO,CAAZ,CAAxB;;AAMA,MAAME,kBAAkB,GAAGC,QAAQ,KAAK;AACpCC,EAAAA,WAAW,EAAE,MAAMD,QAAQ,CAACd,OAAO,CAACgB,SAAR,EAAD,CADS;AAEpCC,EAAAA,WAAW,EAAE,MAAMH,QAAQ,CAACd,OAAO,CAACkB,SAAR,EAAD,CAFS;AAGpCC,EAAAA,UAAU,EAAE,MAAM;AACd,UAAMV,KAAK,GAAGP,cAAc,EAA5B;AACAY,IAAAA,QAAQ,CAACd,OAAO,CAACoB,QAAR,CAAiBX,KAAjB,CAAD,CAAR;AACH;AANmC,CAAL,CAAnC;;AASA,MAAMY,gBAAgB,GAAGpB,OAAO,CAC5BM,eAD4B,EAE5BM,kBAF4B,CAAP,CAGvBd,OAHuB,CAAzB;AAKA,eAAesB,gBAAf","sourcesContent":["import Counter from \"../components/Counter\";\nimport * as actions from \"../actions\";\nimport { connect } from \"react-redux\";\n\nexport function getRandomColor() {\n    const colors = [\n        \"#495057\",\n        \"#f03e3e\",\n        \"#d6336c\",\n        \"#ae3ec9\",\n        \"#7048e8\",\n        \"#4263eb\",\n        \"#1c7cd6\",\n        \"#1098ad\",\n        \"#0ca678\",\n        \"#37b24d\",\n        \"#74b816\",\n        \"#f59f00\",\n        \"#f76707\"\n    ];\n\n    const random = Math.floor(Math.random() * 13);\n\n    return colors[random];\n}\n\nconst mapStateToProps = (state) => ({\n    color: state.colorData.color,\n    number: state.numberData.number\n  });\n  \n\nconst mapDispatchToProps = dispatch => ({\n    onIncrement: () => dispatch(actions.increment()),\n    onDecrement: () => dispatch(actions.decrement()),\n    onSetColor: () => {\n        const color = getRandomColor();\n        dispatch(actions.setColor(color));\n    }\n});\n\nconst CounterContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Counter);\n\nexport default CounterContainer;\n"]},"metadata":{},"sourceType":"module"}